
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'tk_ID tk_asign tk_begin tk_cadena tk_chars tk_closing tk_comment tk_corchClose tk_corchOpen tk_end tk_from tk_ints tk_make tk_modify tk_num tk_operator tk_permanently tk_pick tk_remove tk_separator tk_set tk_table tk_timed tk_when tk_where tk_withprograma : tk_begin instrucciones tk_end programa_fininstrucciones : instruccion tk_closing instrucciones\n                    | emptyinstruccion : declaracion_tabla\n                  | seleccion_datos\n                  | modificacion_datos\n                  | eliminacion_tabla\n                  | comentariodeclaracion_tabla : tk_make tk_table tk_ID tk_with tk_corchOpen lista_campos tk_corchCloseeliminacion_tabla : tk_remove tk_table tk_ID tk_permanentlylista_campos : campo tk_separator lista_campos\n                   | campocampo : tk_ID tipo_datotipo_dato : tk_ints\n                | tk_chars\n                | tk_timedseleccion_datos : tk_pick lista_campos_seleccion tk_from tk_ID condicional_opcionallista_campos_seleccion : tk_ID tk_separator lista_campos_seleccion\n                             | tk_IDcondicional_opcional : tk_when condicion\n                           | emptymodificacion_datos : tk_modify tk_ID tk_set lista_asignaciones condicion_wherelista_asignaciones : asignacion tk_separator lista_asignaciones\n                          | asignacionasignacion : tk_ID tk_asign valorcondicion_where : tk_where expresion_relacional_where\n                       | emptycondicion : expresion_relacionalexpresion_relacional : tk_ID tk_operator valorexpresion_relacional_where : tk_ID tk_asign valorvalor : tk_num\n             | tk_cadena\n             | tk_IDcomentario : tk_commentempty :programa_fin : '
    
_lr_action_items = {'tk_begin':([0,],[2,]),'$end':([1,16,23,],[0,-36,-1,]),'tk_end':([2,3,5,17,24,],[-35,16,-3,-35,-2,]),'tk_make':([2,17,],[11,11,]),'tk_pick':([2,17,],[12,12,]),'tk_modify':([2,17,],[13,13,]),'tk_remove':([2,17,],[14,14,]),'tk_comment':([2,17,],[15,15,]),'tk_closing':([4,6,7,8,9,10,15,31,34,35,36,38,40,42,44,49,50,52,53,54,55,56,58,63,68,69,],[17,-4,-5,-6,-7,-8,-34,-35,-35,-24,-10,-17,-21,-22,-27,-20,-28,-33,-25,-31,-32,-26,-23,-9,-29,-30,]),'tk_table':([11,14,],[18,22,]),'tk_ID':([12,13,18,22,26,27,28,37,39,41,43,45,64,65,66,],[20,21,25,29,31,20,33,46,51,52,57,33,46,52,52,]),'tk_from':([19,20,32,],[26,-19,-18,]),'tk_separator':([20,35,48,52,53,54,55,59,60,61,62,],[27,45,64,-33,-25,-31,-32,-13,-14,-15,-16,]),'tk_set':([21,],[28,]),'tk_with':([25,],[30,]),'tk_permanently':([29,],[36,]),'tk_corchOpen':([30,],[37,]),'tk_when':([31,],[39,]),'tk_asign':([33,57,],[41,66,]),'tk_where':([34,35,52,53,54,55,58,],[43,-24,-33,-25,-31,-32,-23,]),'tk_num':([41,65,66,],[54,54,54,]),'tk_cadena':([41,65,66,],[55,55,55,]),'tk_ints':([46,],[60,]),'tk_chars':([46,],[61,]),'tk_timed':([46,],[62,]),'tk_corchClose':([47,48,59,60,61,62,67,],[63,-12,-13,-14,-15,-16,-11,]),'tk_operator':([51,],[65,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'instrucciones':([2,17,],[3,24,]),'instruccion':([2,17,],[4,4,]),'empty':([2,17,31,34,],[5,5,40,44,]),'declaracion_tabla':([2,17,],[6,6,]),'seleccion_datos':([2,17,],[7,7,]),'modificacion_datos':([2,17,],[8,8,]),'eliminacion_tabla':([2,17,],[9,9,]),'comentario':([2,17,],[10,10,]),'lista_campos_seleccion':([12,27,],[19,32,]),'programa_fin':([16,],[23,]),'lista_asignaciones':([28,45,],[34,58,]),'asignacion':([28,45,],[35,35,]),'condicional_opcional':([31,],[38,]),'condicion_where':([34,],[42,]),'lista_campos':([37,64,],[47,67,]),'campo':([37,64,],[48,48,]),'condicion':([39,],[49,]),'expresion_relacional':([39,],[50,]),'valor':([41,65,66,],[53,68,69,]),'expresion_relacional_where':([43,],[56,]),'tipo_dato':([46,],[59,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> tk_begin instrucciones tk_end programa_fin','programa',4,'p_programa','Yacc.py',8),
  ('instrucciones -> instruccion tk_closing instrucciones','instrucciones',3,'p_instrucciones','Yacc.py',13),
  ('instrucciones -> empty','instrucciones',1,'p_instrucciones','Yacc.py',14),
  ('instruccion -> declaracion_tabla','instruccion',1,'p_instruccion','Yacc.py',21),
  ('instruccion -> seleccion_datos','instruccion',1,'p_instruccion','Yacc.py',22),
  ('instruccion -> modificacion_datos','instruccion',1,'p_instruccion','Yacc.py',23),
  ('instruccion -> eliminacion_tabla','instruccion',1,'p_instruccion','Yacc.py',24),
  ('instruccion -> comentario','instruccion',1,'p_instruccion','Yacc.py',25),
  ('declaracion_tabla -> tk_make tk_table tk_ID tk_with tk_corchOpen lista_campos tk_corchClose','declaracion_tabla',7,'p_declaracion_tabla','Yacc.py',29),
  ('eliminacion_tabla -> tk_remove tk_table tk_ID tk_permanently','eliminacion_tabla',4,'p_eliminacion_tabla','Yacc.py',34),
  ('lista_campos -> campo tk_separator lista_campos','lista_campos',3,'p_lista_campos','Yacc.py',38),
  ('lista_campos -> campo','lista_campos',1,'p_lista_campos','Yacc.py',39),
  ('campo -> tk_ID tipo_dato','campo',2,'p_campo','Yacc.py',49),
  ('tipo_dato -> tk_ints','tipo_dato',1,'p_tipo_dato','Yacc.py',53),
  ('tipo_dato -> tk_chars','tipo_dato',1,'p_tipo_dato','Yacc.py',54),
  ('tipo_dato -> tk_timed','tipo_dato',1,'p_tipo_dato','Yacc.py',55),
  ('seleccion_datos -> tk_pick lista_campos_seleccion tk_from tk_ID condicional_opcional','seleccion_datos',5,'p_seleccion_datos','Yacc.py',64),
  ('lista_campos_seleccion -> tk_ID tk_separator lista_campos_seleccion','lista_campos_seleccion',3,'p_lista_campos_seleccion','Yacc.py',72),
  ('lista_campos_seleccion -> tk_ID','lista_campos_seleccion',1,'p_lista_campos_seleccion','Yacc.py',73),
  ('condicional_opcional -> tk_when condicion','condicional_opcional',2,'p_condicional_opcional','Yacc.py',83),
  ('condicional_opcional -> empty','condicional_opcional',1,'p_condicional_opcional','Yacc.py',84),
  ('modificacion_datos -> tk_modify tk_ID tk_set lista_asignaciones condicion_where','modificacion_datos',5,'p_modificacion_datos','Yacc.py',88),
  ('lista_asignaciones -> asignacion tk_separator lista_asignaciones','lista_asignaciones',3,'p_lista_asignaciones','Yacc.py',97),
  ('lista_asignaciones -> asignacion','lista_asignaciones',1,'p_lista_asignaciones','Yacc.py',98),
  ('asignacion -> tk_ID tk_asign valor','asignacion',3,'p_asignacion','Yacc.py',105),
  ('condicion_where -> tk_where expresion_relacional_where','condicion_where',2,'p_condicion_where','Yacc.py',114),
  ('condicion_where -> empty','condicion_where',1,'p_condicion_where','Yacc.py',115),
  ('condicion -> expresion_relacional','condicion',1,'p_condicion','Yacc.py',123),
  ('expresion_relacional -> tk_ID tk_operator valor','expresion_relacional',3,'p_expresion_relacional','Yacc.py',127),
  ('expresion_relacional_where -> tk_ID tk_asign valor','expresion_relacional_where',3,'p_expresion_relacional_where','Yacc.py',131),
  ('valor -> tk_num','valor',1,'p_valor','Yacc.py',137),
  ('valor -> tk_cadena','valor',1,'p_valor','Yacc.py',138),
  ('valor -> tk_ID','valor',1,'p_valor','Yacc.py',139),
  ('comentario -> tk_comment','comentario',1,'p_comentario','Yacc.py',143),
  ('empty -> <empty>','empty',0,'p_empty','Yacc.py',147),
  ('programa_fin -> <empty>','programa_fin',0,'p_programa_fin','Yacc.py',157),
]
